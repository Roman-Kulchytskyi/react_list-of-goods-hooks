{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","None","sortBy","setSortBy","isReverse","setIsReverse","visibleGoods","goods","sortedGoods","sort","good1","good2","Alphabetically","localeCompare","Length","length","reverse","getPreparedGoods","className","type","cn","onClick","currentIsReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,qBAAAA,E,gBAAAA,E,SAAAA,M,KAkCE,IAAME,EAAM,WACjB,MAA4BC,mBAASH,EAASI,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEMC,EAhCR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAW,YAAOD,GAoBxB,OAlBIL,GACFM,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKL,EAASe,eACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,GACFI,EAAYQ,UAGPR,EAOcS,CAAiBnB,EAAiBI,EAAQE,GAO/D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYlB,IAAWL,EAASe,iBACpCS,QAAS,kBAAMlB,EAAUN,EAASe,iBAJpC,iCASA,wBACEO,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYlB,IAAWL,EAASiB,SACpCO,QAAS,kBAAMlB,EAAUN,EAASiB,SAJpC,4BASA,wBACEK,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAA0B,IAAdhB,IAChBiB,QAAS,kBAAMhB,GAAa,SAAAiB,GAAiB,OAAKA,MAJpD,sBASEpB,GAAUE,IACV,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAvCW,WACnBhB,GAAa,GACbF,EAAUN,EAASI,OAkCb,sBAUJ,6BACGK,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCzGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9bc93f38.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabetically = 'abc',\n  Length = 'length',\n  None = '',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortBy: SortType,\n  isReverse: boolean,\n) {\n  const sortedGoods = [...goods];\n\n  if (sortBy) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.Alphabetically:\n          return good1.localeCompare(good2);\n        case SortType.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState(SortType.None);\n  const [isReverse, setIsReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortBy, isReverse);\n\n  const resetSorting = () => {\n    setIsReverse(false);\n    setSortBy(SortType.None);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortBy !== SortType.Alphabetically })}\n          onClick={() => setSortBy(SortType.Alphabetically)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortBy !== SortType.Length })}\n          onClick={() => setSortBy(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': isReverse === false })}\n          onClick={() => setIsReverse(currentIsReversed => !currentIsReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSorting}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}